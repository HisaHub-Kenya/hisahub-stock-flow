import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Calculator, DollarSign, Target, TrendingUp, CheckCircle, X } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Badge } from '@/components/ui/badge';
var PersonalFinanceModule = function () {
    var _a = useState(''), income = _a[0], setIncome = _a[1];
    var _b = useState(''), expenses = _b[0], setExpenses = _b[1];
    var _c = useState(''), goal = _c[0], setGoal = _c[1];
    var _d = useState(''), timeline = _d[0], setTimeline = _d[1];
    var _e = useState(null), budgetAnalysis = _e[0], setBudgetAnalysis = _e[1];
    var calculateBudget = function () {
        var monthlyIncome = parseFloat(income);
        var monthlyExpenses = parseFloat(expenses);
        var savingsGoal = parseFloat(goal);
        var timelineMonths = parseInt(timeline);
        if (monthlyIncome > 0 && monthlyExpenses > 0 && savingsGoal > 0 && timelineMonths > 0) {
            var monthlySurplus = monthlyIncome - monthlyExpenses;
            var requiredMonthlySavings = savingsGoal / timelineMonths;
            var isFeasible = monthlySurplus >= requiredMonthlySavings;
            var savingsRate = (monthlySurplus / monthlyIncome) * 100;
            setBudgetAnalysis({
                surplus: monthlySurplus,
                required: requiredMonthlySavings,
                feasible: isFeasible,
                savingsRate: savingsRate,
                timeline: timelineMonths
            });
        }
    };
    return (_jsxs("div", { className: "p-3 md:p-6 h-full space-y-4 md:space-y-6", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(Calculator, { className: "text-blue-600", size: 20 }), _jsx("h2", { className: "text-lg md:text-xl font-bold text-gray-800", children: "Personal Finance Coach" })] }), _jsxs("div", { className: "bg-white p-4 rounded-lg border shadow-sm", children: [_jsx("h3", { className: "font-semibold text-gray-700 mb-4", children: "Budget Planner" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "income", className: "text-sm font-medium", children: "Monthly Income ($)" }), _jsx(Input, { id: "income", type: "number", value: income, onChange: function (e) { return setIncome(e.target.value); }, placeholder: "5000", className: "mt-1" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "expenses", className: "text-sm font-medium", children: "Monthly Expenses ($)" }), _jsx(Input, { id: "expenses", type: "number", value: expenses, onChange: function (e) { return setExpenses(e.target.value); }, placeholder: "3500", className: "mt-1" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "goal", className: "text-sm font-medium", children: "Savings Goal ($)" }), _jsx(Input, { id: "goal", type: "number", value: goal, onChange: function (e) { return setGoal(e.target.value); }, placeholder: "10000", className: "mt-1" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "timeline", className: "text-sm font-medium", children: "Timeline (months)" }), _jsx(Input, { id: "timeline", type: "number", value: timeline, onChange: function (e) { return setTimeline(e.target.value); }, placeholder: "12", className: "mt-1" })] }), _jsx(Button, { onClick: calculateBudget, className: "w-full", children: "Create Budget Plan" })] })] }), budgetAnalysis && (_jsxs("div", { className: "p-4 rounded-lg border shadow-sm ".concat(budgetAnalysis.feasible ? 'bg-green-50 border-green-200' : 'bg-red-50 border-red-200'), children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [budgetAnalysis.feasible ? (_jsx(CheckCircle, { className: "text-green-600", size: 20 })) : (_jsx(X, { className: "text-red-600", size: 20 })), _jsx("h3", { className: "font-semibold text-gray-700", children: "Budget Analysis" })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Monthly Surplus/Deficit:" }), _jsxs("span", { className: "font-bold ".concat(budgetAnalysis.surplus > 0 ? 'text-green-600' : 'text-red-600'), children: ["$", budgetAnalysis.surplus.toLocaleString()] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Required Monthly Savings:" }), _jsxs("span", { className: "font-bold", children: ["$", budgetAnalysis.required.toLocaleString()] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Goal Feasibility:" }), _jsx("span", { className: "font-bold ".concat(budgetAnalysis.feasible ? 'text-green-600' : 'text-red-600'), children: budgetAnalysis.feasible ? 'Achievable' : 'Not Feasible' })] }), _jsx("div", { className: "p-3 bg-white rounded-lg border mt-4", children: _jsx("div", { className: "text-sm text-gray-600", children: budgetAnalysis.feasible
                                        ? "Great! You can save $".concat(budgetAnalysis.surplus.toLocaleString(), " monthly, which exceeds your target of $").concat(budgetAnalysis.required.toLocaleString(), ".")
                                        : "You need an additional $".concat((budgetAnalysis.required - budgetAnalysis.surplus).toLocaleString(), " monthly to reach your goal. Consider reducing expenses or extending timeline.") }) })] })] })), _jsxs("div", { className: "bg-white p-4 rounded-lg border shadow-sm", children: [_jsx("h3", { className: "font-semibold text-gray-700 mb-4", children: "Financial Health Score" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Emergency Fund" }), _jsx(Badge, { variant: "secondary", className: "bg-yellow-100 text-yellow-800", children: "Building" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Debt-to-Income" }), _jsx(Badge, { variant: "secondary", className: "bg-green-100 text-green-800", children: "Good" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Investment Diversity" }), _jsx(Badge, { variant: "secondary", className: "bg-blue-100 text-blue-800", children: "Moderate" })] })] })] }), _jsxs("div", { className: "bg-blue-50 p-4 rounded-lg border shadow-sm", children: [_jsx("h3", { className: "font-semibold text-gray-700 mb-4", children: "Financial Tips" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-start gap-3", children: [_jsx(DollarSign, { className: "text-green-600 mt-0.5", size: 16 }), _jsxs("div", { className: "text-sm", children: [_jsx("div", { className: "font-medium", children: "50/30/20 Rule" }), _jsx("div", { className: "text-gray-600", children: "50% needs, 30% wants, 20% savings and debt repayment" })] })] }), _jsxs("div", { className: "flex items-start gap-3", children: [_jsx(Target, { className: "text-blue-600 mt-0.5", size: 16 }), _jsxs("div", { className: "text-sm", children: [_jsx("div", { className: "font-medium", children: "Emergency Fund Priority" }), _jsx("div", { className: "text-gray-600", children: "Build 3-6 months of expenses before aggressive investing" })] })] }), _jsxs("div", { className: "flex items-start gap-3", children: [_jsx(TrendingUp, { className: "text-purple-600 mt-0.5", size: 16 }), _jsxs("div", { className: "text-sm", children: [_jsx("div", { className: "font-medium", children: "Compound Interest" }), _jsx("div", { className: "text-gray-600", children: "Start investing early to maximize compound growth potential" })] })] })] })] })] }));
};
export default PersonalFinanceModule;
